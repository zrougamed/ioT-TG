
// CREATE GRAPH gname (vertex_or_edge_type, vertex_or_edge_type...) [WITH ADMIN username]

CREATE GRAPH Book_rating () 


// CREATE VERTEX vertex_type_name (primary_id_name_type
//     [, attribute_name type [DEFAULT default_value] ]*)
//     [WITH [STATS="none"|"outdegree_by_edgetype"][primary_id_as_attribute="true"]]


CREATE VERTEX User (PRIMARY_ID user_id UINT, name STRING, age UINT, gender STRING, postalCode STRING)
CREATE VERTEX Occupation (PRIMARY_ID occ_id UINT, occ_name STRING)
    WITH STATS="outdegree_by_edgetype"
CREATE VERTEX Book  (PRIMARY_ID bookcode UINT, title STRING, pub_year UINT)
    WITH STATS="none"
CREATE VERTEX Genre (PRIMARY_ID genre_id STRING, genre_name STRING)


// CREATE UNDIRECTED|DIRECTED EDGE edge_type_name (FROM vertex_type_name , TO vertex_type_name , 
// edge_attribute_list ) [ edge_options ]

// Note : The NULL and NOT NULL properties are not supported. NULL is not a supported value in the graph database.

CREATE UNDIRECTED EDGE user_occupation (FROM User, TO Occupation)
CREATE UNDIRECTED EDGE book_genre (FROM Book, TO Genre)
CREATE UNDIRECTED EDGE user_book_rating (FROM User, TO Book, rating UINT, date_time UINT)

CREATE UNDIRECTED EDGE friend_of (FROM User, TO User, on_date UINT)
CREATE UNDIRECTED EDGE user_book_read (FROM User, To Book, on_date UINT)
CREATE DIRECTED EDGE sequel_of (FROM Book, TO Book) WITH REVERSE_EDGE="preceded_by"


// CREATE VERTEX User (PRIMARY_ID user_id UINT, name STRING, age UINT, gender STRING, postalCode STRING)
// CREATE VERTEX Occupation (PRIMARY_ID occ_id UINT, occ_name STRING)
//     WITH STATS="outdegree_by_edgetype"
// CREATE VERTEX Book  (PRIMARY_ID bookcode UINT, title STRING, pub_year UINT)
//     WITH STATS="none"
// CREATE VERTEX Genre (PRIMARY_ID genre_id STRING, genre_name STRING)
// CREATE UNDIRECTED EDGE user_occupation (FROM User, TO Occupation)
// CREATE UNDIRECTED EDGE book_genre (FROM Book, TO Genre)
// CREATE UNDIRECTED EDGE user_book_rating (FROM User, TO Book, rating UINT, date_time UINT)
// CREATE UNDIRECTED EDGE friend_of (FROM User, TO User, on_date UINT)
// CREATE UNDIRECTED EDGE user_book_read (FROM User, To Book, on_date UINT)
// CREATE DIRECTED EDGE sequel_of (FROM Book, TO Book) WITH REVERSE_EDGE="preceded_by"
// CREATE GRAPH Book_rating (*)